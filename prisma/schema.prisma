// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  email     String   @id @db.VarChar(100)
  password  String   @db.VarChar(100)
  name      String   @db.VarChar(100)
  token     String?  @db.VarChar(200)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("user")
}

model Profile {
  firstname String   @db.VarChar(100)
  lastname  String   @db.VarChar(100)
  email     String   @id @db.VarChar(100)
  bio       String?  @db.Text
  web       String?  @db.VarChar(100)
  github    String?  @db.VarChar(100)
  gitlab    String?  @db.VarChar(100)
  linkedin  String?  @db.VarChar(100)
  instagram String?  @db.VarChar(100)
  facebook  String?  @db.VarChar(100)
  twitter   String?  @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("profile")
}

model SkillCategory {
  id        Int      @id @default(autoincrement())
  title     String   @unique @db.VarChar(100)
  skills    Skill[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("skill_category")
}

model Skill {
  id         Int           @id @default(autoincrement())
  title      String        @db.VarChar(100)
  categoryId Int           @db.Int
  category   SkillCategory @relation(fields: [categoryId], references: [id])
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @default(now()) @updatedAt

  @@map("skill")
}

model Education {
  id              Int      @id @default(autoincrement())
  institutionName String   @db.VarChar(100)
  startYear       Int      @db.Year
  endYear         Int?     @db.Year
  major           String?  @db.VarChar(100)
  degree          String?  @db.VarChar(100)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("education")
}

model Project {
  id          Int           @id @default(autoincrement())
  title       String        @db.VarChar(100)
  description String        @db.Text
  url         String?       @db.VarChar(100)
  github      String?       @db.VarChar(100)
  gitlab      String?       @db.VarChar(100)
  startDate   DateTime      @db.Date
  endDate     DateTime?     @db.Date
  status      ProjectStatus @default(ON_PROGRESS)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([title])
  @@map("project")
}

enum ProjectStatus {
  ON_PROGRESS
  COMPLETE
  MAINTENANCE
}
