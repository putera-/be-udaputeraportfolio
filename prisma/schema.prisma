// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  email     String   @id @db.VarChar(100)
  password  String   @db.VarChar(100)
  name      String   @db.VarChar(100)
  token     String?  @db.VarChar(200)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("user")
}

model Profile {
  firstname String   @db.VarChar(100)
  lastname  String   @db.VarChar(100)
  avatar    String?  @db.VarChar(255)
  job       String   @db.VarChar(100)
  email     String   @id @db.VarChar(100)
  phone     String   @db.VarChar(100)
  dob       DateTime @db.Date
  address   String   @db.Text
  city      String   @db.VarChar(100)
  country   String   @db.VarChar(100)
  bio       String?  @db.Text
  web       String?  @db.VarChar(100)
  github    String?  @db.VarChar(100)
  gitlab    String?  @db.VarChar(100)
  linkedin  String?  @db.VarChar(100)
  instagram String?  @db.VarChar(100)
  facebook  String?  @db.VarChar(100)
  twitter   String?  @db.VarChar(100)
  discord   String?  @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("profile")
}

model SkillCategory {
  id        Int      @id @default(autoincrement())
  title     String   @unique @db.VarChar(100)
  skills    Skill[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("skill_category")
}

model Skill {
  id            Int             @id @default(autoincrement())
  title         String          @db.VarChar(100)
  svg           String?         @db.Text
  categoryId    Int             @db.Int
  category      SkillCategory   @relation(fields: [categoryId], references: [id])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now()) @updatedAt
  ProjectSkills ProjectSkills[]

  @@map("skill")
}

model Education {
  id              Int      @id @default(autoincrement())
  institutionName String   @db.VarChar(100)
  startYear       Int      @db.Year
  endYear         Int?     @db.Year
  major           String?  @db.VarChar(100)
  degree          String?  @db.VarChar(100)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt

  @@map("education")
}

model Experience {
  id          Int       @id @default(autoincrement())
  company     String    @db.VarChar(100)
  location    String    @db.VarChar(100)
  title       String    @db.VarChar(100)
  description String    @db.Text
  startDate   DateTime  @db.Date
  endDate     DateTime? @db.Date
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt

  @@map("experience")
}

model Project {
  id            Int             @id @default(autoincrement())
  title         String          @db.VarChar(100)
  description   String          @db.Text
  url           String?         @db.VarChar(100)
  github        String?         @db.VarChar(100)
  gitlab        String?         @db.VarChar(100)
  startDate     DateTime        @db.Date
  endDate       DateTime?       @db.Date
  status        ProjectStatus?  @default(ON_PROGRESS)
  company       String?         @db.VarChar(100)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now()) @updatedAt
  ProjectSkills ProjectSkills[]

  @@index([title])
  @@map("project")
}

model ProjectSkills {
  projectId Int
  project   Project @relation(fields: [projectId], references: [id])
  skillId   Int
  skill     Skill   @relation(fields: [skillId], references: [id])

  @@id([projectId, skillId])
  @@map("project_skills")
}

enum ProjectStatus {
  ON_PROGRESS
  COMPLETE
  MAINTENANCE
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("blog")
}

model Log {
  id        Int      @id @default(autoincrement())
  level     String   @db.VarChar(16)
  message   String   @db.Text
  meta      String   @db.Text
  timestamp DateTime @default(now())

  @@map("sys_logs")
}
